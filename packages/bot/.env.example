# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# For local development: Use SQLite (no DATABASE_URL needed)
# For production/Docker: Use PostgreSQL with DATABASE_URL
DATA_ROOT=./data
DATABASE_PROVIDER=sqlite
# DATABASE_URL=postgres://user:password@host:5432/database

# =============================================================================
# JOBS CONFIGURATION
# =============================================================================
# Disable bot-run jobs by name (comma-separated). Supports 'all' to disable all, or specific jobs:
#   birthdays, twitch, youtube, reminders, patchnotes
# Example: disable all locally when API handles jobs centrally
# BOT_JOBS_DISABLED=all
# Or disable just birthdays
# BOT_JOBS_DISABLED=birthdays

# =============================================================================
# LOGGING (pino)
# =============================================================================
# Set log level: fatal|error|warn|info|debug|trace (defaults: production=info, development=debug)
# LOG_LEVEL=debug
# Enable pretty logs (colors) when set to 1. In dev, set this to see colored output.
# LOG_PRETTY=1
# Optional: choose pretty mode: 'short' (single-line) or 'expanded' (multi-line). Defaults to 'short'.
# LOG_PRETTY_MODE=expanded

# =============================================================================
# DISCORD CONFIGURATION
# =============================================================================
# Get these from https://discord.com/developers/applications
DISCORD_BOT_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
CLIENT_ID=123456789012345678
GUILD_ID=123456789012345678

# Optional: internal health server (GET /healthz, /ready)
# Bind to loopback by default (safer). Use 0.0.0.0 only if you must expose externally.
BOT_HEALTH_HOST=127.0.0.1
# Choose a port or 0 for ephemeral
BOT_HEALTH_PORT=0

# =============================================================================
# RIOT GAMES API
# =============================================================================
# Get API keys from https://developer.riotgames.com/
RIOT_LEAGUE_API_KEY=RGAPI-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
RIOT_TFT_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
RIOT_DEV_API_KEY=RGAPI-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# TWITCH INTEGRATION
# =============================================================================
# Get credentials from https://dev.twitch.tv/console/apps
TWITCH_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWITCH_CLIENT_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Optional: jitter (ms) to stagger startup and avoid thundering herd
TWITCH_STARTUP_JITTER_MS=8000
# Optional: encrypt app token at rest in DB (AES-256-GCM). Provide a stable secret.
# A SHA-256 of this value is used as the 32-byte encryption key.
TWITCH_TOKEN_ENC_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# YOUTUBE INTEGRATION
# =============================================================================
# Get API key from https://console.cloud.google.com/apis/credentials
YOUTUBE_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Optional: disabled by default to reduce token usage
YOUTUBE_ENRICH_EMBEDS=0

# =============================================================================
# WEATHER API
# =============================================================================
# Get a free API key from https://openweathermap.org/api
OPENWEATHER_API_KEY=your_openweathermap_api_key