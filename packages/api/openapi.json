{
  "openapi": "3.0.0",
  "info": {
    "title": "Fakegaming Bot API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "API base path"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Login via /auth/login and paste the token here using the \"Authorize\" button."
      }
    },
    "schemas": {
      "BirthdayConfig": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "day": {
            "type": "integer",
            "format": "int64"
          },
          "month": {
            "type": "integer",
            "format": "int64"
          },
          "year": {
            "type": "integer",
            "format": "int64"
          },
          "guildId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "userId",
          "createdAt",
          "updatedAt"
        ]
      },
      "DisabledCommandConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "guildId": {
            "type": "string"
          },
          "commandName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "PatchNoteConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "game": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "publishedAt": {
            "type": "integer",
            "format": "int64"
          },
          "logoUrl": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "accentColor": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "PatchSubscriptionConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "game": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "guildId": {
            "type": "string"
          },
          "lastAnnouncedAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "QuoteConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "guildId": {
            "type": "string"
          },
          "quote": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "submitterId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "ReminderConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "timespan": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "completed": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "ServerConfig": {
        "type": "object",
        "properties": {
          "serverId": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "welcomeMessage": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "serverId",
          "createdAt",
          "updatedAt"
        ]
      },
      "TwitchStreamConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "twitchUsername": {
            "type": "string"
          },
          "discordChannelId": {
            "type": "string"
          },
          "customMessage": {
            "type": "string"
          },
          "guildId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserConfig": {
        "type": "object",
        "properties": {
          "discordId": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "defaultReminderTimeSpan": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "discordId",
          "createdAt",
          "updatedAt"
        ]
      },
      "YoutubeVideoConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "youtubeChannelId": {
            "type": "string"
          },
          "discordChannelId": {
            "type": "string"
          },
          "lastVideoId": {
            "type": "string"
          },
          "customMessage": {
            "type": "string"
          },
          "guildId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login and get a JWT token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "code": "your_discord_oauth_code"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token and user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "discriminator": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        }
                      }
                    },
                    "guilds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/birthdays": {
      "get": {
        "summary": "List all birthdays",
        "tags": [
          "Birthdays"
        ],
        "responses": {
          "200": {
            "description": "List of birthdays",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BirthdayConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add or update a birthday",
        "tags": [
          "Birthdays"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BirthdayConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/birthdays/{userId}/{guildId}": {
      "get": {
        "summary": "Get a birthday by userId and guildId",
        "tags": [
          "Birthdays"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Birthday config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BirthdayConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Remove a birthday by userId and guildId",
        "tags": [
          "Birthdays"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/disabledCommands": {
      "get": {
        "summary": "List all disabled commands",
        "tags": [
          "DisabledCommands"
        ],
        "responses": {
          "200": {
            "description": "List of disabled commands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisabledCommandConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a disabled command",
        "tags": [
          "DisabledCommands"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisabledCommandConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/disabledCommands/check": {
      "get": {
        "summary": "Check if a command is disabled in a guild",
        "tags": [
          "DisabledCommands"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "commandName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disabled status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/disabledCommands/{id}": {
      "delete": {
        "summary": "Remove a disabled command by id",
        "tags": [
          "DisabledCommands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/disabledCommands/guild/{guildId}": {
      "get": {
        "summary": "List all disabled commands for a specific guild",
        "tags": [
          "DisabledCommands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of disabled commands for the guild",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisabledCommandConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/patchNotes": {
      "get": {
        "summary": "List all patch notes",
        "tags": [
          "PatchNotes"
        ],
        "responses": {
          "200": {
            "description": "List of patch notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatchNoteConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Upsert (add or update) a patch note",
        "tags": [
          "PatchNotes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchNoteConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/patchNotes/{game}": {
      "get": {
        "summary": "Get the latest patch note for a game",
        "tags": [
          "PatchNotes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "game",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch note config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchNoteConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/patchSubscriptions": {
      "get": {
        "summary": "List all patch subscriptions",
        "tags": [
          "PatchSubscriptions"
        ],
        "responses": {
          "200": {
            "description": "List of patch subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatchSubscriptionConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Subscribe to a game/channel",
        "tags": [
          "PatchSubscriptions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSubscriptionConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "put": {
        "summary": "Upsert (add or update) a patch subscription",
        "tags": [
          "PatchSubscriptions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSubscriptionConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/quotes": {
      "get": {
        "summary": "List all quotes",
        "tags": [
          "Quotes"
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new quote",
        "tags": [
          "Quotes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/quotes/search": {
      "get": {
        "summary": "Search quotes by text and guildId",
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/guild/{guildId}": {
      "get": {
        "summary": "Get quotes by guild",
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/guild/{guildId}/author/{authorId}": {
      "get": {
        "summary": "Get quotes by author in guild",
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guildId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "authorId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}": {
      "delete": {
        "summary": "Delete a quote by id",
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "get": {
        "summary": "Get a quote by id",
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A quote object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteConfig"
                }
              }
            }
          },
          "404": {
            "description": "Quote not found"
          }
        }
      }
    },
    "/reminders": {
      "get": {
        "summary": "List all reminders",
        "tags": [
          "Reminders"
        ],
        "responses": {
          "200": {
            "description": "List of reminders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReminderConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new reminder",
        "tags": [
          "Reminders"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReminderConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/reminders/{id}": {
      "get": {
        "summary": "Get a reminder by id",
        "tags": [
          "Reminders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Remove a reminder by id",
        "tags": [
          "Reminders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/servers": {
      "get": {
        "summary": "List all servers",
        "tags": [
          "Servers"
        ],
        "responses": {
          "200": {
            "description": "List of servers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServerConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/servers/{serverId}": {
      "get": {
        "summary": "Get a server by serverId",
        "tags": [
          "Servers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Server config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/twitch": {
      "get": {
        "summary": "List all Twitch stream configs",
        "tags": [
          "Twitch"
        ],
        "responses": {
          "200": {
            "description": "List of Twitch configs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TwitchStreamConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new Twitch config",
        "tags": [
          "Twitch"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwitchStreamConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/twitch/exists": {
      "get": {
        "summary": "Check if a Twitch stream exists for a Discord channel",
        "tags": [
          "Twitch"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "channelId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Existence result"
          }
        }
      }
    },
    "/twitch/{id}": {
      "get": {
        "summary": "Get a Twitch config by primary key",
        "tags": [
          "Twitch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Twitch config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwitchStreamConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create or update a user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/users/{discordId}": {
      "get": {
        "summary": "Get a user by Discord ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/users/{discordId}/timezone": {
      "put": {
        "summary": "Set a user's timezone",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timezone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/{discordId}/defaultReminderTimeSpan": {
      "put": {
        "summary": "Set a user's default reminder timespan",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discordId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timespan": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/youtube": {
      "get": {
        "summary": "List all YouTube channel configs",
        "tags": [
          "YouTube"
        ],
        "responses": {
          "200": {
            "description": "List of YouTube configs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YoutubeVideoConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new YouTube config",
        "tags": [
          "YouTube"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YoutubeVideoConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "put": {
        "summary": "Upsert (add or update) a YouTube config",
        "tags": [
          "YouTube"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YoutubeVideoConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/youtube/channel": {
      "get": {
        "summary": "Get a YouTube config by youtubeChannelId and discordChannelId",
        "tags": [
          "YouTube"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "youtubeChannelId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "discordChannelId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "YouTube config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YoutubeVideoConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/youtube/{id}": {
      "get": {
        "summary": "Get a YouTube config by primary key",
        "tags": [
          "YouTube"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "YouTube config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YoutubeVideoConfig"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "tags": []
}