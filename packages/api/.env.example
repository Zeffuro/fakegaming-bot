# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
PORT=3001
PUBLIC_URL=http://localhost:3001/api

# =============================================================================
# LOGGING (pino)
# =============================================================================
# Set log level: fatal|error|warn|info|debug|trace (defaults: production=info, development=debug)
# LOG_LEVEL=debug
# Enable pretty logs (colors) when set to 1. In dev, set this to see colored output.
# LOG_PRETTY=1
# Optional: choose pretty mode: 'short' (single-line) or 'expanded' (multi-line). Defaults to 'short'.
# LOG_PRETTY_MODE=expanded

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# For local development: Use SQLite (no DATABASE_URL needed)
# For production/Docker: Use PostgreSQL with DATABASE_URL
DATABASE_PROVIDER=sqlite
# DATABASE_URL=postgres://user:password@host:5432/database

# =============================================================================
# JOBS (optional)
# =============================================================================
# Enable background jobs (disabled by default). Set to 1 to enable.
# In local dev without Postgres, set JOBS_BACKEND=memory.
# In production (or with Postgres), leave JOBS_BACKEND unset and ensure DATABASE_PROVIDER=postgres and DATABASE_URL is set.
# Examples (Windows cmd):
#   set JOBS_ENABLED=1
#   set JOBS_BACKEND=memory
#   pnpm --filter @zeffuro/fakegaming-bot-api run start:dev
#   - or -
#   set JOBS_ENABLED=1
#   set DATABASE_PROVIDER=postgres
#   set DATABASE_URL=postgres://user:pass@localhost:5432/fakegaming
#   pnpm --filter @zeffuro/fakegaming-bot-api run start:dev
# Default: disabled
# JOBS_ENABLED=0
# JOBS_BACKEND=memory

# =============================================================================
# DISCORD CONFIGURATION
# =============================================================================
# Get these from https://discord.com/developers/applications
DISCORD_BOT_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
CLIENT_ID=123456789012345678
GUILD_ID=123456789012345678

# =============================================================================
# DASHBOARD ADMINS
# =============================================================================
# Comma-separated list of Discord user IDs with admin access
DASHBOARD_ADMINS=123456789012345678,987654321098765432

# =============================================================================
# JWT & AUTHENTICATION
# =============================================================================
# Generate a secure secret: openssl rand -base64 32
JWT_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
JWT_AUDIENCE=fakegaming-dashboard
JWT_ISSUER=fakegaming

# =============================================================================
# DASHBOARD OAUTH CREDENTIALS
# =============================================================================
# Used for dashboard authentication to the API
DASHBOARD_CLIENT_ID=dashboard
DASHBOARD_CLIENT_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# REDIS (OPTIONAL)
# =============================================================================
# For session/cache storage. Free tiers available at:
# - Redis.com: https://redis.com/try-free/
# - Upstash: https://upstash.com/
# If not set, falls back to database storage
# REDIS_URL=redis://default:password@redis-host:6379

# =============================================================================
# RATE LIMITING (requests per minute)
# =============================================================================
API_MEMBER_SEARCH_TTL_MS=60000